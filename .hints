cd ~/src/cyberspace
git remote set-url origin git@github.com:ddp/cyberspace.git
git push -u origin main --force

OCaml
  dnf install ocaml ocaml-findlib opam
  opam install merlin utop dune ocaml-lsp-server lwt lwt_ppx
  
  emacs packages: dune
  
Claude ~/Library/Application Support/Claude/claude_desktop_config.json

{
  "mcpServers": {
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/Users/ddp/Desktop",
        "/Users/ddp/Downloads",
        "/Users/ddp/audio",
        "/Users/ddp/src",
        "/Users/ddp/bin",
        "/Users/ddp/doc",
        "/Users/ddp/me",
        "/Users/ddp/pics",
        "/Users/ddp/vids"
      ]
    }
  },
  "globalShortcut": "Alt+Ctrl+Cmd+C"
}

sudo defaults write /Library/Preferences/com.apple.loginwindow LoginWindowText "Unauthorized Access Prohibited"

homebrew:

  brew install tcsh emacs mosh rlwrap krb5 sbcl chicken bridge-utils
  brew install sdl2 sdl2_gfx sdl2_image sdl2_mixer sdl2_net sdl2_sound sdl2_ttf libpcap
  
Transmit log:
  defaults write com.panic.Transmit UseVerboseLogging 1 
  defaults write com.panic.Transmit UseVerboseLogging 0

dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-42.noarch.rpm
dnf install https://mirrors.rpmfusion.org/nonfree/fedora/rpmfuaion-nonfree-release-42.noarch.rpm

dnf repolist
dnf install akmod-nvidia xorg-x11-drv-nvidia-cuda tcsh emacs rlwrap sbcl chicken mosh simh

Synology USB External storage/swap:
  diskutil list
  diskutil unmountDisk /dev/disk4
  diskutil eraseDisk free NONE MBR /dev/disk4
  brew install e2fsprogs
  sudo /opt/homebrew/opt/e2fsprogs/sbin/mkfs.ext4 /dev/disk4

Fedora Kinoite
  sudo -s
  diskutil unmountDisk disk5
  dd if=Fedora-Kinoite-ostree-aarch64-41-1.4.iso of=/dev/disk5s1 bs=1m conv=noerror,sync

monome max
  brew install serialosc
  brew services start serialosc
  brew services list

debian

  apt /etc/apt/sources.list
  deb http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware
  deb http://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware
  deb http://deb.debian.org/debian/ bookworm-updates main contrib non-free non-free-firmware 
  deb http://deb.debian.org/debian/ bookworm-backports main contrib non-free non-free-firmware
    
  apt install emacs tcsh rlwrap sbcl chicken-bin simh mosh

emacs packages
  sly

mount-ddp:sudo /usr/bin/vmhgfs-fuse .host:/ddp /mnt/ddp -o subtype=vmhgfs-fuse,allow_other

dd if=Fedora-Workstation-40-1.14.aarch64.raw of=Fedora-Workstation-40-1.14.aarch64.iso bs=2048

hostname:
  sudo scutil --set HostName <new host name>

ubuntu server:
  Yes, you can remove the CD-ROM (or or original installation media) from the sources.list

  Edit the sources.list file with the following command:

  sudo nano /etc/apt/sources.list
  And near the top, comment out the line that looks like this:

  deb cdrom:[Ubuntu-Server 9.04 _Jaunty Jackalope_ - Release i386 (20090421.1)]/ jaunty main restricted
  (comment is a hash (#) - so pop one of these at the start of the deb cdrom: ... line)

  Press Ctrl+X to exit the nano text editor, pressing y to save your changes

  Then finally you'll need to run:

  sudo apt-get update
  To update your package lists.

macOS server performance mode:
  sudo nvram boot-args="serverperfmode=1 $(nvram boot-args 2>/dev/null | cut -f 2-)"
  sudo nvram boot-args="$(nvram boot-args 2>/dev/null | sed -e $'s/boot-args\t//;s/serverperfmode=1//')"

sshfp:
  ssh-keygen -r orb.eludom.net

nuvi% ssh-keygen -e -f id_ed25519.pub 
---- BEGIN SSH2 PUBLIC KEY ----
Comment: "256-bit ED25519, converted by ddp@nuvi from OpenSSH"
AAAAC3NzaC1lZDI1NTE5AAAAIPtDt2YY59QhNuXDgs/x1g6Eegz8ca5QklZ36c/GS2HG
---- END SSH2 PUBLIC KEY ----

freebsd-update
  freebsd-update -r 11.1-RELEASE upgrade

  /etc/resolv.conf
      search eludom.net
      nameserver 139.60.72.130
      nameserver 139.60.72.131
      options edns0

show dot files in Finder:
  defaults write com.apple.finder AppleShowAllFiles TRUE

ssh-keygen -o -a 100 -t ed25519

chicken-doc
  cd `csi -p '(chicken-home)'`
  curl http://3e8.org/pub/chicken-doc/chicken-doc-repo.tgz | sudo tar zx

smtp.yoyodyne.com
    1025
    587 (submission) ddp YoyodynePS
    
freebsd open-vm-tools:
vmware_guest_vmblock_enable="YES"
vmware_guest_vmhgfs_enable="YES"
vmware_guest_vmmemctl_enable="YES"
vmware_guest_vmxnet_enable="YES"
vmware_guestd_enable="YES"

sip:
  csrutil {enable | disable}
  sudo mkdir /usr/local && sudo chflags norestricted /usr/local && sudo chown $(whoami):admin /usr/local && sudo chown -R $(whoami):admin /usr/local

tar:
  "tar -axvf" is like "tar -zxvf" except uses the file suffix to figure out which compressor to use

icloud:
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

remove ACLs:

 sudo chown -R `whoami` ~
 chmod -N -R ~

disks

  drutil status                         -- display CD/DVD info
  diskutil unmount /dev/disk<n>         -- unmount drive
  dd if=/dev/disk<n> of=w7hp.iso        -- create ISO from CD

tarsnap
  ~/tarsnap-check -> /usr/local/bin/tarsnap-backup (remove --dry-run)
  /usr/local/etc/tarsnap.conf

/dev/null
  >/dev/null 2>&1

closing stderr in shells:
  /path/to/daemon 2>&-

Find all executable files in/down from current directory:

	find . -perm +0111 -not -type d -not -type l -not -name "*.*" -execdir file {} \; | grep "Mach-O executable i386"

copying CDROM

	sudo dd if=/dev/rdisk1s1s2 of=RT3.dmg bs=5242880 conv=noerror,sync

	5M blocksize, do not quit on read error, pad with zeros

write CD-R from bin/cue:

	sudo cdrdao write --device IODVDServices/0 <foo.cue>

X11 over SSH

	localhost%  ssh -L7100:localhost:7100 -Y user@remotehost

	(in another Terminal window)
	localhost%  xset +fp tcp/localhost:7100

	(back in the first window, after it has ssh'd into the remote host)
	remotehost% Xnest ":1" -geometry 1280x810 -query localhost

chicken

  clean will remove all intermediate files created during compilation

  confclean will also remove generated header files like
  chicken-config.h chicken-defaults.h

  testclean will remove all files generated by a make check in tests/

  spotless is confclean and testclean plus removal of the bootstrapping files

  distclean is shorthand for clean and confclean

  So the dangerous one for users is spotless as it removes the ability to
  build chicken from scratch without having a previously built chicken.

  brew install chicken; make PLATFORM=macosx PREFIX=/usr/local ARCH=x86-64 C_COMPILER=clang; brew uninstall chicken
  
;  make PLATFORM=macosx PREFIX=/usr/local ARCH=x86-64 C_COMPILER=clang boot-chicken
;  make PLATFORM=macosx PREFIX=/usr/local ARCH=x86-64 C_COMPILER=clang CHICKEN=./chicken-boot install

  export CSC_OPTIONS="-I/opt/local/include -L/opt/local/lib"
  cd readline; chicken-install

  Remember that the default egg path is:
    /usr/local/lib/chicken/<n>

  ...if you build it -prefix=/usr/local/chicken you end up with a silly path.

mit-scheme-c
  tar xzf mit-scheme-c-20080130.tar.gz
  cd mit-scheme-c-20080130/src

  etc/make-liarc.sh

  make install

OpenSSL certificate display:

  openssl x509 -in <foo>.crt -text -noout

flushing DNS cache:

  dscacheutil -flushcache || \
  discoveryutil mdnsflushcache || \
  killall -HUP mDNSResponder


  pre-10.6: sudo lookupd -flushcache
  10.6+: sudo dscacheutil -flushcache

  chmod 644 /etc/hosts

  don't use host, dig, or nslookup to check (they don't use /etc/hosts)
  dscacheutil -q host -a name facebook.com

  scutil --dns

convert from shorten -> flac:
        for f in *.shn; do ffmpeg -i "$f" "${f/%.shn/.flac}"; done

convert from alac -> flac:

  alac <input> | flac -cs --totally-silent --compression-level-0 --endian big --sign signed --channels 2 --bps 16 --sample-rate 44100 - >> <output>

launchctl startup (static routes):

  add /Library/LaunchDaemons/org.electric-loft.routes.plist
  /etc/routes.sh; chmod +x /etc/routes.sh
  launchctl load /Library/LaunchDaemons/org.electric-loft.routes.plist
  tail /var/log/system.log (see routes.sh for syslog usage)

Get the list of modules available:

  rsync www1.ietf.org::

To create a mirror of all the Internet-Drafts:

  rsync -avz --delete www1.ietf.org::internet-drafts <mirror-directory>

To create a mirror of all the Internet-Drafts, but keep old versions:

  rsync -avz www1.ietf.org::internet-drafts <mirror-directory>

To get the list of modules available

  rsync ftp.rfc-editor.org::

  rsync -avz --delete ftp.rfc-editor.org::rfcs-text-only <mirror-directory>

find vs. exec

  find . -name "<regex>" -print0 | xargs -0 <cmd>

openmcl
  svn:
    svn update

    (ccl:rebuild-ccl :full t)

  cd /usr/local
  mkdir asdf-install
  chgrp admin asdf-install
  chmod g+w asdf-install

  install gnupg2, modify ~/.gnupg/gnupg.conf to include:
    keyserver wwwkeys.pgp.net
    keyserver-options auto-key-retrieve

  ccl-init.lisp
    (require 'asdf)
	(pushnew "ccl:tools;asdf-install;" asdf:*central-registry* :test #'string-equal)
	(asdf:operate 'asdf:load-op 'asdf-install)

itunes arrows:
  defaults write com.apple.iTunes show-store-arrow-links -bool false
  ..or..
  defaults write com.apple.iTunes invertStoreLinks -bool true

strip off the first 726 bytes of garbage:

  for file in *.jpg; do dd if=$file of=$file.out bs=726 skip=1; done;

commands by popularity:

  history | awk '{print $3}' | awk 'BEGIN {FS="|"} {print $1}' | sort | uniq -c | sort -r

Mail
  IMAP-ddps@mail.yoyodyne.com		-- spamassassin mail
  POP-ddpb@mail.yoyodyne.com		-- wordpress blog pop post relay
  IMAP-ddp@electric-loft.org		-- GSSAPI access to el-6.electric-loft.org

Finding text files and setting TEXT:

    find -x / -type f -print0 | xargs -0 -L 1 file | grep "ASCII" \
| grep "text" | awk -F":" '{print $1}' | grep "/" \
| xargs -n 1 -t -J % /Developer/Tools/SetFile -t "TEXT" "%"

search & replace across multiple files:

  $ for FILE in `find . -name "*.epub"`; do cd tmp; unzip ../$FILE; sed -i '' 's/wrong_tag/right_tag/g' metadata.opf; zip -r $FILE *; mv $FILE ../$FILE; cd ../; done

public dns:

  8.8.8.8
  8.8.4.4
  75.75.75.75

remote emacs over ssh:

  Start an emacs daemon on the machine running the X11 server

    emacs --daemon
    Start an X11 client when you are sitting at the X11 server machine

    emacsclient -c
    Start a TTY client when you log in via SSH

    emacsclient -t
    You can have multiple clients attached at the same time.

  Note that you can skip the emacs --daemon step (nor do you need to actually have the X11 client open, but that was part of the question) with the -a switch and an empty argument.

    emacsclient -ca ""
    emacsclient -ta ""
    I have this aliased to e and et, respectively.

dapptrace

  dapptrace -p `ps axc | grep mDNSResponder | awk '{print $1}'`

triggering Setup Assistant:

  rm /var/db/.AppleSetupDone

gpg:

  gpg --keyserver x-hkp://pool.sks-keyservers.net --recv-keys 0x63FEE659

  gpg --fingerprint 0x63FEE659
  ***manually compare fingerprint***

  gpg --verify TorBrowser-2.2.35-1-dev-osx-x86_64-en-US.asc TorBrowser-2.2.35-1-dev-osx-x86_64-en-US.zip

italian XDXF pruning:

  grep "<k>" dict.xdxf  | cut -c 8- | cut -f 1 -d \< | cut -f 1 -d , | cut -f 1 -d \  | uniq > ~/tmp/italian.txt

rebuild md:

  mdutil -s /              -- see what's on
  mdutil -i on /           -- enable md
  mdutil -E /              -- force rebuild

tarsnap:
  tarsnap --print-stats --dry-run -v -c -f ddp /Users/ddp

raspberry pi
  diskutil unmount /Volumes/Pi
  dd bs=1m if=rpfr-17-xfce-r2.img of=/dev/rdisk3

  sudo /usr/libexec/bootpd -d -v -D -i en2

  sudo tcpdump -i en2 -v -s 1600 port bootpc or port bootps

  Raspian:

  /etc/network/interfaces
    auto wlan0
    iface wlan0 inet dhcp
    wpa-ssid "Serie di Tubi"
    wpa-psk "floatypackets"

  Bus 001 Device 004: ID 0bda:8176 Realtek Semiconductor Corp. RTL8188CUS 802.11n WLAN

  115200 8N1

  NetBSD:

    The following instructions should get you online using a pre-shared 
    passphrase with most recent access points (assumes you are using an 
    iwi(4) WLAN card):

    Add the following to your /etc/ifconfig.iwi0:
    !/usr/sbin/wpa_supplicant -B -i iwi0 -c /etc/wpa_supplicant.conf

    Create and populate /etc/wpa_supplicant.conf:
    network={
            ssid="MYWLAN"
            scan_ssid=1
            key_mgmt=WPA-PSK
            psk="MySecretPassphrase"
    }
        
freebsd:
   freebsd-update fetch
   freebsd-update install

   WARNING: svn co will clobber freebsd-update
   cd /usr/src
   svn co https://svn0.us-west.FreeBSD.org/base/stable/10 /usr/src
   cd /usr/ports
   svn co https://svn0.us-west.FreeBSD.org/ports/head /usr/ports
   cd /usr/doc
   svn co https://svn0.us-west.FreeBSD.org/doc/stable/10 /usr/doc
   WARNING: svn co will clobber freebsd-update

   /etc/src.conf    # controls make buildworld
     WITHOUT_KERBEROS=true
     WITH_GSSAPI=true

   cd /usr/src/sys/amd64/conf
   cd /usr/src/sys/i386/conf

include GENERIC
ident DDP
options         IPFIREWALL
options         IPFIREWALL_DEFAULT_TO_ACCEPT
options         IPDIVERT
options         DUMMYNET
options         IPSEC
device          crypto

   cd /usr/src
   make buildworld
   make buildkernel KERNCONF=DDP
   make installkernel KERNCONF=DDP
   shutdown -r now
   
   cd /usr/src
   make installworld

   make check-old
   yes | make delete-old
   reboot

   cd /usr/src
   yes | make delete-old-libs
   shutdown -r now
   
show clang options:
  clang -dM -E -x c /dev/null

anki:
  <tts service="say" voice="Silvia">{{parola}}</tts>

simh empty RA92:
  dd if=/dev/zero of=vaxvmssys.iso bs=512 count=9600000

cisco 3650 used ebay

quantum lt06 tape
  navitvely sas (serial attached scsi)
  attootech pci-e cabinet (single if doing just tape)
            thunderbolt-2 to pci-e
            pci-e to sas card

          thunderlink sh-1068
          thunderstream w/ RAID controller

  sonnetech pci-e card cabinets
  sata disks

MIT krb5 configuration (el-vm)
  /usr/local/var/krb5kdc
    krb5.conf
    kdc.conf

Heimdal configuration (el-vm)
  /etc/krb5.conf
  /etc/kdc.conf

  /var/heimdal

  fluffy:
    /etc/pam.d/authorization
      auth       optional       pam_krb5.so use_first_pass use_kcminit default_principal
    /etc/krb5.keytab
      replaced with one from el-vm; original saved to .osx

ffmpeg (flv -> mp4):

  ffmpeg -i /Users/ddp/Movies/pr0n/Jaksta/luna_grey-sd-141115-02.flv -strict experimental -acodec aac -ab 96k -vcodec libx264 -preset slow -f mp4 -crf 22 -s 800x600 /Users/ddp/Movies/Miro Video Converter/tmpPpg8Zm

Replay Media Capture
  sudo launchtl load /System/Library/LaunchDaemons/com.applian.RMCConfigDaemon.plist

gamed
  sudo defaults write /System/Library/LaunchAgents/com.apple.gamed Disabled -bool true

accessibility
  sudo sqlite3 /Library/Application\ Support/com.apple.TCC/TCC.db
  .dump access
  delete from "access" where (service=="kTCCServiceAccessibility" and client=="com.getdropbox.dropbox");

tar over network:
  pull: ssh root@<host> "cat ~/tmp/foo.tgz" | tar xvzf -
  push: tar cvzf - <directory> | ssh root@dumpserver.nixcraft.in "cat > ~/tmp/foo.tgz”

finding setuid programs:
  sudo find / -perm -04000 -ls

deleting all ACLs in a directory root:
  find . -acl -print0 | xargs -0 chmod -a "group:everyone deny delete"

deleting the infamous "group:everyone deny delete" from / (as allowed by SIP):
  sudo find / -acl -print0 | xargs -0 chmod -a "group:everyone deny delete"

 